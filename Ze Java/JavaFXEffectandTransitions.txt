import javafx.application.*;
import javafx.stage.*;
import javafx.scene.*;
import javafx.scene.layout.*;
import javafx.scene.control.*;
import javafx.event.*;
import javafx.geometry.*;
import javafx.scene.transform.*;
import javafx.scene.effect.*;
import javafx.scene.paint.*;

public class JavaFXEffectandTransitions extends Application{

	double scaleFactor = 0.4;
	double blurVal = 1.0;
	double angle = 0.0;

	Reflection effectrefl = new Reflection();
	Rotate effectrot = new Rotate();
	Scale effectscal = new Scale(scaleFactor, scaleFactor);
	BoxBlur effectbxbl = new BoxBlur(1.0, 1.0, 1);

	Button btnrot = new Button("Rotate");
	Button btnscal = new Button("Scale");
	Button btnblr = new Button("Blur Off");

	Label refl = new Label("Showing Visual Emphasis");

	public static void main(String args[]){
		launch(args);
	}


	public void start(Stage myStage){

		myStage.setTitle("Effects and Transforms");
		FlowPane rootnode = new FlowPane(20, 20);
		FlowPane.setAlignment(Pos.CENTER);
		Scene myScene = new Scene(rootnode, 320, 220);
		myStage.setScene(myScene);

		btnrot.getTransforms().add(effectrot);			//Forgot
		btnscal.getTransforms().add(effectscal);			//rotate and scale ARE TRANSFORMS, so this is how they're added
										//on the other hand, reflection and boxblur are effects and added by .setEffect((effect))

		effectrefl.setTopOpacity(0.7);
		effectrefl.setBottomOpacity(0.3);

		refl.setEffect(effectrefl);

		btnrot.setOnAction(EventHandler<ActionEvent>(){		//effects and transforms are affect by DOUBLES, the events change the values of these doubles then apply changes to effects that are associated with elements
			public void handle(ActionEvent ae){
				angle = 15.0;

				effectrot.setAngle(angle);
				effectrot.setPivotX(btnrot.getwidth()/2);
				effectrot.setPivotY(btnrot.getheight()/2);
			}
		});

		

		btnscal.getOnAction(EventHandler<ActionEvent>(){
			public void handle(ActionEvent ae){
				scaleFactor += 0.1;
				
				if(scaleFactor > 2.0) scaleFactor = 0.4;
		
				effectscal.setX(scaleFactor);
				effectscal.setY(scaleFactor);
			}
		});

	
			
		btnblur.setOnAction(EventHandler<ActionEvent>(){
			public void handle(ActionEvent ae){
				
				if(blurVal == 10.0){
					blurVal = 1.0;
					btnblur.setEffect(null);
					btnblur.setText("Blur Off");
				}

				else{
					blurVal++;
					blurbtn.setEffect(effectbxbr);
					blurbtn.setText("Blur On");
				}

				effectbxbr.setWidth(blurVal);
				effectbxbr.setHeight(blurVal);
			}
		}


		rootnode.getChildren.addAll(btnrot, btnscal, btnblur, refl);

		myStage.show();
	}
}
